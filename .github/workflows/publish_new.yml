name: Publish Notebooks to GitHub Pages

on:
  workflow_dispatch:
    inputs:
      db_profile:
        type: string
        description: 'Databricks environment to publish HTML from'
        default: 'DEMO'
      db_path:
        type: string
        description: 'Repository path on databricks environment'
        required: true
      split_markdown:
        description: 'Split HTML by markdown sections'
        type: choice
        required: true
        default: 'false'
        options:
          - 'true'
          - 'false'
  push:
    branches: [ main ]
    paths: [ 'notebooks/**' ]

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  publish:
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:

      - name: Checkout project
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install nbconvert jupyter-book sphinx
          pip install databricks-cli

      - name: Configure Databricks CLI
        env:
          DATABRICKS_HOST: ${{ vars.DATABRICKS_HOST || 'https://e2-demo-field-eng.cloud.databricks.com/' }}
          DATABRICKS_TOKEN: ${{ secrets.DATABRICKS_TOKEN }}
        run: |
          if [ -z "$DATABRICKS_TOKEN" ]; then
            echo "❌ DATABRICKS_TOKEN secret not found!"
            echo "Please add DATABRICKS_TOKEN to your repository secrets."
            exit 1
          fi
          cat > ~/.databrickscfg << EOF
          [DEFAULT]
          host = $DATABRICKS_HOST
          token = $DATABRICKS_TOKEN
          EOF

      - name: Export notebooks from Databricks
        run: |
          mkdir -p exported_notebooks
          
          # Get the workspace path - use input if provided, otherwise use default pattern
          if [ "${{ github.event_name }}" = "workflow_dispatch" ] && [ -n "${{ github.event.inputs.db_path }}" ]; then
            DB_PATH="${{ github.event.inputs.db_path }}"
          else
            # Auto-detect from deployed bundle
            DB_PATH="/Workspace/Users/$(databricks current-user me --output json | jq -r .userName)/dbx-dabs-demo-dev/files/notebooks"
          fi
          
          echo "Exporting notebooks from: $DB_PATH"
          
          # Export all notebooks as HTML
          databricks workspace export-dir "$DB_PATH" exported_notebooks --format HTML --exclude-hidden-files
          
          # Also export as source for reference
          databricks workspace export-dir "$DB_PATH" exported_notebooks/source --format SOURCE --exclude-hidden-files

      - name: Generate GitHub Pages site
        run: |
          mkdir -p site
          
          # Create index.html
          cat > site/index.html << 'EOF'
          <!DOCTYPE html>
          <html>
          <head>
              <title>${{ github.event.repository.name }} - Databricks Notebooks</title>
              <style>
                  body { font-family: Arial, sans-serif; margin: 40px; }
                  h1 { color: #FF3621; }
                  .notebook-list { list-style-type: none; padding: 0; }
                  .notebook-list li { margin: 10px 0; }
                  .notebook-list a { text-decoration: none; color: #0366d6; }
                  .notebook-list a:hover { text-decoration: underline; }
                  .description { color: #666; margin: 20px 0; }
              </style>
          </head>
          <body>
              <h1>${{ github.event.repository.name }}</h1>
              <p class="description">Databricks Asset Bundle - Published Notebooks</p>
              <h2>Notebooks</h2>
              <ul class="notebook-list">
          EOF
          
          # Add links to all HTML files
          find exported_notebooks -name "*.html" -type f | while read file; do
            filename=$(basename "$file" .html)
            relative_path=${file#exported_notebooks/}
            echo "                  <li><a href=\"$relative_path\">$filename</a></li>" >> site/index.html
          done
          
          cat >> site/index.html << 'EOF'
              </ul>
              <h2>Source Code</h2>
              <ul class="notebook-list">
          EOF
          
          # Add links to source files
          find exported_notebooks/source -name "*.ipynb" -o -name "*.py" | while read file; do
            filename=$(basename "$file")
            relative_path=${file#exported_notebooks/}
            echo "                  <li><a href=\"$relative_path\">$filename</a></li>" >> site/index.html
          done
          
          cat >> site/index.html << 'EOF'
              </ul>
              <footer style="margin-top: 40px; padding-top: 20px; border-top: 1px solid #eee; color: #666;">
                  <p>Generated from <a href="${{ github.server_url }}/${{ github.repository }}">${{ github.repository }}</a></p>
              </footer>
          </body>
          </html>
          EOF
          
          # Copy all exported files to site directory
          cp -r exported_notebooks/* site/

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: 'site'

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4